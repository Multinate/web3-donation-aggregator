{
  "address": "0xddF51C4e20A05733a24837684b95626B7422d4Df",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_attestationStation",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumAttestationScore",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_gnosisSafe",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "charity",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CampaignFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "charity",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "eligible",
          "type": "bool"
        }
      ],
      "name": "CharityEligibilityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "origin",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FINANCIAL_STATEMENTS_KEY",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MISSION_STATEMENT_KEY",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REGISTRATION_KEY",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TAX_EXEMPT_STATUS_KEY",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attestationStation",
      "outputs": [
        {
          "internalType": "contract IAttestationStation",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "campaigns",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "charity",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "targetAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "charityScores",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_charity",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "donate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_origin",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "_sender",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "handle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_charity",
          "type": "address"
        }
      ],
      "name": "isCharityEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumAttestationScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextCampaignId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumAttestationScore",
          "type": "uint256"
        }
      ],
      "name": "setMinimumAttestationScore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapManager",
          "type": "address"
        }
      ],
      "name": "setSwapManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_charity",
          "type": "address"
        }
      ],
      "name": "updateCharityScore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x83678c5e1f41966d84534c061b466692e9beca8ef942576661f5812f10ce9500",
  "receipt": {
    "to": null,
    "from": "0x6860542E55Fb9292e4c8b478FcEec724d3351C2e",
    "contractAddress": "0xddF51C4e20A05733a24837684b95626B7422d4Df",
    "transactionIndex": 0,
    "gasUsed": "1573544",
    "logsBloom": "0x
    "blockHash": "0x38eb72a0b21db5091894dd313075b1cffc62799c9780a36a15ef31ab9ea69a1d",
    "transactionHash": "0x83678c5e1f41966d84534c061b466692e9beca8ef942576661f5812f10ce9500",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 27132494,
        "transactionHash": "0x83678c5e1f41966d84534c061b466692e9beca8ef942576661f5812f10ce9500",
        "address": "0xddF51C4e20A05733a24837684b95626B7422d4Df",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006860542e55fb9292e4c8b478fceec724d3351c2e"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x38eb72a0b21db5091894dd313075b1cffc62799c9780a36a15ef31ab9ea69a1d"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 27132494,
        "transactionHash": "0x83678c5e1f41966d84534c061b466692e9beca8ef942576661f5812f10ce9500",
        "address": "0xddF51C4e20A05733a24837684b95626B7422d4Df",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000006860542e55fb9292e4c8b478fceec724d3351c2e",
          "0x0000000000000000000000009c9eae71cbc35cfd2457b8c0fdbd167e8229fa3e"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x38eb72a0b21db5091894dd313075b1cffc62799c9780a36a15ef31ab9ea69a1d"
      }
    ],
    "blockNumber": 27132494,
    "cumulativeGasUsed": "1573544",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9E92b0cbE751F081C0fD78431c65012801232602",
    50,
    "0x9c9EaE71CBc35cfd2457B8C0fdbd167e8229fa3E",
    "0x07A583000b1C86b159e065D16c05fbD5A14f92A8"
  ],
  "numDeployments": 1,
  "solcInputHash": "35fa3a65c54e26fe7240128929a421ff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attestationStation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumAttestationScore\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_gnosisSafe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CampaignFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"charity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"eligible\",\"type\":\"bool\"}],\"name\":\"CharityEligibilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FINANCIAL_STATEMENTS_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MISSION_STATEMENT_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRATION_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAX_EXEMPT_STATUS_KEY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attestationStation\",\"outputs\":[{\"internalType\":\"contract IAttestationStation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"charity\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"charityScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charity\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charity\",\"type\":\"address\"}],\"name\":\"isCharityEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumAttestationScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextCampaignId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumAttestationScore\",\"type\":\"uint256\"}],\"name\":\"setMinimumAttestationScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"setSwapManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charity\",\"type\":\"address\"}],\"name\":\"updateCharityScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multinate.sol\":\"Multinate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@hyperlane-xyz/core/interfaces/IInterchainSecurityModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.6.11;\\n\\ninterface IInterchainSecurityModule {\\n    /**\\n     * @notice Returns an enum that represents the type of security model\\n     * encoded by this ISM.\\n     * @dev Relayers infer how to fetch and format metadata.\\n     */\\n    function moduleType() external view returns (uint8);\\n\\n    /**\\n     * @notice Defines a security model responsible for verifying interchain\\n     * messages based on the provided metadata.\\n     * @param _metadata Off-chain metadata provided by a relayer, specific to\\n     * the security model encoded by the module (e.g. validator signatures)\\n     * @param _message Hyperlane encoded interchain message\\n     * @return True if the message was verified\\n     */\\n    function verify(bytes calldata _metadata, bytes calldata _message)\\n        external\\n        returns (bool);\\n}\\n\\ninterface ISpecifiesInterchainSecurityModule {\\n    function interchainSecurityModule()\\n        external\\n        view\\n        returns (IInterchainSecurityModule);\\n}\\n\",\"keccak256\":\"0xb963aa8eb79d245ff750ec013b467b8a7bced3de5eaad7ea5595967f2ea9a253\",\"license\":\"MIT OR Apache-2.0\"},\"@hyperlane-xyz/core/interfaces/IMailbox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.8.0;\\n\\nimport {IInterchainSecurityModule} from \\\"./IInterchainSecurityModule.sol\\\";\\n\\ninterface IMailbox {\\n    function localDomain() external view returns (uint32);\\n\\n    function dispatch(\\n        uint32 _destinationDomain,\\n        bytes32 _recipientAddress,\\n        bytes calldata _messageBody\\n    ) external returns (bytes32);\\n\\n    function process(bytes calldata _metadata, bytes calldata _message)\\n        external;\\n\\n    function count() external view returns (uint32);\\n\\n    function root() external view returns (bytes32);\\n\\n    function latestCheckpoint() external view returns (bytes32, uint32);\\n\\n    function recipientIsm(address _recipient)\\n        external\\n        view\\n        returns (IInterchainSecurityModule);\\n}\\n\",\"keccak256\":\"0x5fa1da478e6c0561ab998ef0c21f3c4fc93b09b808c9e0f6cc1f1dc2012b380b\",\"license\":\"MIT OR Apache-2.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Multinate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.15;\\r\\n\\r\\nimport \\\"./interfaces/IAttestationStation.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@hyperlane-xyz/core/interfaces/IMailbox.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Multinate is Ownable {\\r\\n    IAttestationStation public attestationStation;\\r\\n    IERC20 public usdc;\\r\\n    uint256 public minimumAttestationScore;\\r\\n    address public swapManager;\\r\\n    IMailbox mailbox = IMailbox(0x35231d4c2D8B8ADcB5617A638A0c4548684c7C70);\\r\\n    bytes32 public constant REGISTRATION_KEY = keccak256(\\\"registration\\\");\\r\\n    bytes32 public constant TAX_EXEMPT_STATUS_KEY = keccak256(\\\"tax_exempt_status\\\");\\r\\n    bytes32 public constant FINANCIAL_STATEMENTS_KEY = keccak256(\\\"financial_statements\\\");\\r\\n    bytes32 public constant MISSION_STATEMENT_KEY = keccak256(\\\"mission_statement\\\");\\r\\n\\r\\n    mapping(address => uint256) public charityScores;\\r\\n    struct Campaign {\\r\\n        address payable charity;\\r\\n        string title;\\r\\n        string description;\\r\\n        uint256 targetAmount;\\r\\n        uint256 currentAmount;\\r\\n        uint256 deadline;\\r\\n        bool active;\\r\\n    }\\r\\n\\r\\n    uint256 public nextCampaignId = 1;\\r\\n\\r\\n    mapping(uint256 => Campaign) public campaigns;\\r\\n\\r\\n    event CampaignCreated(\\r\\n        uint256 indexed campaignId,\\r\\n        address indexed charity,\\r\\n        string title,\\r\\n        string description,\\r\\n        uint256 targetAmount,\\r\\n        uint256 deadline\\r\\n    );\\r\\n    event CharityEligibilityUpdated(address indexed charity, bool eligible);\\r\\n    event CampaignFunded(uint256 indexed campaignId, uint256 amount);\\r\\n    event Donated(uint32 origin, address indexed donor, uint256 indexed campaignId, uint256 amount);\\r\\n\\r\\n    constructor(address _attestationStation, uint256 _minimumAttestationScore, address _gnosisSafe, address _usdc) {\\r\\n        attestationStation = IAttestationStation(_attestationStation);\\r\\n        minimumAttestationScore = _minimumAttestationScore;\\r\\n        usdc = IERC20(_usdc);\\r\\n        transferOwnership(_gnosisSafe);\\r\\n    }\\r\\n\\r\\n    function setMinimumAttestationScore(uint256 _minimumAttestationScore) external {\\r\\n        minimumAttestationScore = _minimumAttestationScore;\\r\\n    }\\r\\n\\r\\n    function updateCharityScore(address _charity) external {\\r\\n        uint256 score = 0;\\r\\n\\r\\n        // Add a scoring system based on the attestation data\\r\\n        bytes memory registrationData = attestationStation.attestations(msg.sender, _charity, REGISTRATION_KEY);\\r\\n        score += calculateRegistrationScore(registrationData);\\r\\n        bytes memory taxExemptStatusData = attestationStation.attestations(msg.sender, _charity, TAX_EXEMPT_STATUS_KEY);\\r\\n        score += calculateTaxExemptStatusScore(taxExemptStatusData);\\r\\n        bytes memory financialStatementsData = attestationStation.attestations(\\r\\n            msg.sender,\\r\\n            _charity,\\r\\n            FINANCIAL_STATEMENTS_KEY\\r\\n        );\\r\\n        score += calculateFinancialStatementsScore(financialStatementsData);\\r\\n        bytes memory missionStatementData = attestationStation.attestations(\\r\\n            msg.sender,\\r\\n            _charity,\\r\\n            MISSION_STATEMENT_KEY\\r\\n        );\\r\\n        score += calculateMissionStatementScore(missionStatementData);\\r\\n        charityScores[_charity] = score;\\r\\n        bool isEligible = score >= minimumAttestationScore;\\r\\n        emit CharityEligibilityUpdated(_charity, isEligible);\\r\\n    }\\r\\n\\r\\n    function isCharityEligible(address _charity) public view returns (bool) {\\r\\n        return charityScores[_charity] >= minimumAttestationScore;\\r\\n    }\\r\\n\\r\\n    function calculateRegistrationScore(bytes memory _registrationData) internal pure returns (uint256) {\\r\\n        // Check if registration data is available\\r\\n        if (_registrationData.length > 0) {\\r\\n            // In this example, we assign 25 points for having registration data\\r\\n            return 25;\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function calculateTaxExemptStatusScore(bytes memory _taxExemptStatusData) internal pure returns (uint256) {\\r\\n        // Check if tax-exempt status data is available\\r\\n        if (_taxExemptStatusData.length > 0) {\\r\\n            // In this example, we assign 25 points for having tax-exempt status data\\r\\n            return 25;\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function calculateFinancialStatementsScore(bytes memory _financialStatementsData) internal pure returns (uint256) {\\r\\n        // Check if financial statements data is available\\r\\n        if (_financialStatementsData.length > 0) {\\r\\n            // In this example, we assign a score between 0 and 25 based on the financial transparency level\\r\\n            // (e.g., percentage of funds spent on the mission, administrative costs, etc.)\\r\\n            uint256 transparencyLevel = uint8(_financialStatementsData[0]);\\r\\n            return (transparencyLevel * 25) / 100;\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function calculateMissionStatementScore(bytes memory _missionStatementData) internal pure returns (uint256) {\\r\\n        // Check if mission statement data is available\\r\\n        if (_missionStatementData.length > 0) {\\r\\n            // In this example, we assign a score between 0 and 25 based on the mission's alignment with global goals (e.g., UN SDGs)\\r\\n            uint256 alignmentScore = uint8(_missionStatementData[0]);\\r\\n            return (alignmentScore * 25) / 100;\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function createCampaign(\\r\\n        address _charity,\\r\\n        string memory _title,\\r\\n        string memory _description,\\r\\n        uint256 _targetAmount,\\r\\n        uint256 _deadline\\r\\n    ) external {\\r\\n        require(isCharityEligible(_charity), \\\"The charity organization is not eligible\\\");\\r\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\r\\n        require(_targetAmount > 0, \\\"Target amount must be greater than zero\\\");\\r\\n\\r\\n        uint256 campaignId = nextCampaignId;\\r\\n        nextCampaignId++;\\r\\n\\r\\n        campaigns[campaignId] = Campaign({\\r\\n            charity: payable(_charity),\\r\\n            title: _title,\\r\\n            description: _description,\\r\\n            targetAmount: _targetAmount,\\r\\n            currentAmount: 0,\\r\\n            deadline: _deadline,\\r\\n            active: true\\r\\n        });\\r\\n\\r\\n        emit CampaignCreated(campaignId, _charity, _title, _description, _targetAmount, _deadline);\\r\\n    }\\r\\n\\r\\n    // Withdraw funds from the campaign\\r\\n    function withdraw(uint256 _campaignId) external {\\r\\n        Campaign storage campaign = campaigns[_campaignId];\\r\\n        require(campaign.active, \\\"Campaign is not active\\\");\\r\\n        require(campaign.charity == msg.sender, \\\"Only the charity can withdraw funds\\\");\\r\\n        require(campaign.currentAmount >= campaign.targetAmount, \\\"Target amount not reached\\\");\\r\\n        require(campaign.deadline < block.timestamp, \\\"Deadline has not passed yet\\\");\\r\\n\\r\\n        campaign.active = false;\\r\\n        usdc.transfer(campaign.charity, campaign.currentAmount);\\r\\n        // Emit event\\r\\n        emit CampaignFunded(_campaignId, campaign.currentAmount);\\r\\n    }\\r\\n\\r\\n    // Handle donations\\r\\n    function handle(uint32 _origin, bytes32 _sender, bytes memory _message) external {\\r\\n        require(msg.sender == address(mailbox), \\\"Only mailbox can call this function\\\");\\r\\n        // Decode the message\\r\\n        (address donor, uint256 campaignId, uint256 amount) = abi.decode(_message, (address, uint256, uint256));\\r\\n        Campaign storage campaign = campaigns[campaignId];\\r\\n        require(campaign.active, \\\"Campaign is not active\\\");\\r\\n        require(campaign.currentAmount + amount <= campaign.targetAmount, \\\"Target amount exceeded\\\");\\r\\n        require(campaign.deadline > block.timestamp, \\\"Deadline has passed\\\");\\r\\n        campaign.currentAmount += amount;\\r\\n        // Emit event\\r\\n        emit Donated(_origin, donor, campaignId, amount);\\r\\n    }\\r\\n\\r\\n    // Handle donations from the same chain\\r\\n    function donate(uint256 _campaignId, uint256 _amount) external {\\r\\n        // Require to be swapManager\\r\\n        require(msg.sender == swapManager, \\\"Only swapManager can call this function\\\");\\r\\n        // Require transfer of USDC tokens\\r\\n        require(usdc.transferFrom(msg.sender, address(this), _amount), \\\"USDC transfer failed\\\");\\r\\n        Campaign storage campaign = campaigns[_campaignId];\\r\\n        require(campaign.active, \\\"Campaign is not active\\\");\\r\\n        require(campaign.currentAmount + _amount <= campaign.targetAmount, \\\"Target amount exceeded\\\");\\r\\n        require(campaign.deadline > block.timestamp, \\\"Deadline has passed\\\");\\r\\n        campaign.currentAmount += _amount;\\r\\n        // Emit event\\r\\n        emit Donated(137, tx.origin, _campaignId, _amount);\\r\\n    }\\r\\n\\r\\n    // Set swapManager\\r\\n    function setSwapManager(address _swapManager) external {\\r\\n        swapManager = _swapManager;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0d161c016cad25277d80721511378b6b828bde5845d6d6d6995c34cf44e88711\",\"license\":\"MIT\"},\"contracts/interfaces/IAttestationStation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.15;\\r\\n\\r\\ninterface IAttestationStation {\\r\\n    function attestations(address creator, address about, bytes32 key) external view returns (bytes memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x7ab9ca4015c9b5ce5ecb9ce37e5b2cfbdf5eb76807d6ce979804bd9290737987\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600580546001600160a01b0319167335231d4c2d8b8adcb5617a638a0c4548684c7c7017905560016007553480156200003c57600080fd5b5060405162001b3d38038062001b3d8339810160408190526200005f9162000202565b6200006a33620000b4565b600180546001600160a01b038087166001600160a01b03199283161790925560038590556002805492841692909116919091179055620000aa8262000104565b5050505062000256565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200010e62000187565b6001600160a01b038116620001795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200018481620000b4565b50565b6000546001600160a01b03163314620001e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000170565b565b80516001600160a01b0381168114620001fd57600080fd5b919050565b600080600080608085870312156200021957600080fd5b6200022485620001e5565b9350602085015192506200023b60408601620001e5565b91506200024b60608601620001e5565b905092959194509250565b6118d780620002666000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806365a0aee2116100b85780638da5cb5b1161007c5780638da5cb5b146102da578063ab05b757146102eb578063b191f53214610312578063c550042114610339578063d2009a2714610379578063f2fde38b146103a057600080fd5b806365a0aee21461027c578063709d039d1461028f578063715018a6146102a257806372c0b64e146102aa5780637903a756146102d157600080fd5b80632e1a7d4d1161010a5780632e1a7d4d146101df57806330284efc146101f25780633e413bee146102225780634d17c7401461024d57806356d5d475146102605780635de556371461027357600080fd5b8063075843c3146101475780630cdd53f61461015c578063141961bc1461016f578063274481761461019e5780632dec1b4b146101cc575b600080fd5b61015a61015536600461134c565b6103b3565b005b61015a61016a3660046113d4565b610615565b61018261017d3660046113f6565b61086c565b604051610195979695949392919061146b565b60405180910390f35b6101be6101ac3660046114ca565b60066020526000908152604090205481565b604051908152602001610195565b61015a6101da3660046114ca565b6109c5565b61015a6101ed3660046113f6565b610cf6565b61015a6102003660046114ca565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600254610235906001600160a01b031681565b6040516001600160a01b039091168152602001610195565b61015a61025b3660046113f6565b600355565b61015a61026e3660046114e7565b610f05565b6101be60035481565b600154610235906001600160a01b031681565b600454610235906001600160a01b031681565b61015a6110d2565b6101be7f3e5f59afb28eefd9525b5a2a3e685a733e99fa16aeacdb37152ea65d9b1b423d81565b6101be60075481565b6000546001600160a01b0316610235565b6101be7f60ecd1bdb09484e1247f8c79f400cc78f8ff2b8bc010a2332aba54e28a3339c681565b6101be7f13b35f1f951b0047acda6ce2a2e67dfca07ec779483f93c4d74d92d60109f3a681565b6103696103473660046114ca565b6003546001600160a01b03909116600090815260066020526040902054101590565b6040519015158152602001610195565b6101be7fb54de7d710bb293db28cb644cd1b5e8ed893bb2d85468f8b0e5018b1c1864c8981565b61015a6103ae3660046114ca565b6110e6565b6003546001600160a01b03861660009081526006602052604090205410156104335760405162461bcd60e51b815260206004820152602860248201527f5468652063686172697479206f7267616e697a6174696f6e206973206e6f7420604482015267656c696769626c6560c01b60648201526084015b60405180910390fd5b4281116104825760405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e20746865206675747572650000604482015260640161042a565b600082116104e25760405162461bcd60e51b815260206004820152602760248201527f54617267657420616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b606482015260840161042a565b6007805490819060006104f483611573565b90915550506040805160e0810182526001600160a01b03888116825260208083018981528385018990526060840188905260006080850181905260a08501889052600160c08601819052878252600890935294909420835181546001600160a01b0319169316929092178255925191929091908201906105749082611615565b50604082015160028201906105899082611615565b50606082015160038201556080820151600482015560a0820151600582015560c0909101516006909101805460ff19169115159190911790556040516001600160a01b0387169082907f2ed5f13fbff3630ac8ec2d0779b5c1af5323ce6fa6e8810ce40317252f8733f2906106059089908990899089906116d5565b60405180910390a3505050505050565b6004546001600160a01b0316331461067f5760405162461bcd60e51b815260206004820152602760248201527f4f6e6c7920737761704d616e616765722063616e2063616c6c207468697320666044820152663ab731ba34b7b760c91b606482015260840161042a565b6002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906106b39033903090869060040161170e565b6020604051808303816000875af11580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f69190611732565b6107395760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b604482015260640161042a565b6000828152600860205260409020600681015460ff1661076b5760405162461bcd60e51b815260040161042a90611754565b80600301548282600401546107809190611784565b11156107c75760405162461bcd60e51b815260206004820152601660248201527515185c99d95d08185b5bdd5b9d08195e18d95959195960521b604482015260640161042a565b428160050154116108105760405162461bcd60e51b8152602060048201526013602482015272111958591b1a5b99481a185cc81c185cdcd959606a1b604482015260640161042a565b818160040160008282546108249190611784565b9091555050604080516089815260208101849052849132917f249073b88ce702b9abd1ff334f555a3261c9b36e51dc61b0924fabdb511a4a42910160405180910390a3505050565b600860205260009081526040902080546001820180546001600160a01b0390921692916108989061158c565b80601f01602080910402602001604051908101604052809291908181526020018280546108c49061158c565b80156109115780601f106108e657610100808354040283529160200191610911565b820191906000526020600020905b8154815290600101906020018083116108f457829003601f168201915b5050505050908060020180546109269061158c565b80601f01602080910402602001604051908101604052809291908181526020018280546109529061158c565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050506003830154600484015460058501546006909501549394919390925060ff1687565b6001546040516329b42cb560e01b815260009182916001600160a01b03909116906329b42cb590610a1e90339087907f60ecd1bdb09484e1247f8c79f400cc78f8ff2b8bc010a2332aba54e28a3339c69060040161170e565b600060405180830381865afa158015610a3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a63919081019061179c565b9050610a6e8161115f565b610a789083611784565b6001546040516329b42cb560e01b81529193506000916001600160a01b03909116906329b42cb590610ad290339088907f13b35f1f951b0047acda6ce2a2e67dfca07ec779483f93c4d74d92d60109f3a69060040161170e565b600060405180830381865afa158015610aef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b17919081019061179c565b9050610b228161115f565b610b2c9084611784565b6001546040516329b42cb560e01b81529194506000916001600160a01b03909116906329b42cb590610b8690339089907f3e5f59afb28eefd9525b5a2a3e685a733e99fa16aeacdb37152ea65d9b1b423d9060040161170e565b600060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bcb919081019061179c565b9050610bd681611179565b610be09085611784565b6001546040516329b42cb560e01b81529195506000916001600160a01b03909116906329b42cb590610c3a9033908a907fb54de7d710bb293db28cb644cd1b5e8ed893bb2d85468f8b0e5018b1c1864c899060040161170e565b600060405180830381865afa158015610c57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c7f919081019061179c565b9050610c8a81611179565b610c949086611784565b6001600160a01b0387166000818152600660209081526040918290208490556003549151918410158083529398507f722947cf2ea50e4d2b4771633d4cb3ed1cd2a072d5d388a56f16cc28d49e3058910160405180910390a250505050505050565b6000818152600860205260409020600681015460ff16610d285760405162461bcd60e51b815260040161042a90611754565b80546001600160a01b03163314610d8d5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792074686520636861726974792063616e2077697468647261772066756044820152626e647360e81b606482015260840161042a565b806003015481600401541015610de55760405162461bcd60e51b815260206004820152601960248201527f54617267657420616d6f756e74206e6f74207265616368656400000000000000604482015260640161042a565b42816005015410610e385760405162461bcd60e51b815260206004820152601b60248201527f446561646c696e6520686173206e6f7420706173736564207965740000000000604482015260640161042a565b60068101805460ff19169055600254815460048084015460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af1158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec29190611732565b50817f318daf69d77e946364e804495b2184222324b99fddeb42ab5fd25a919f596e8c8260040154604051610ef991815260200190565b60405180910390a25050565b6005546001600160a01b03163314610f6b5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206d61696c626f782063616e2063616c6c20746869732066756e637460448201526234b7b760e91b606482015260840161042a565b600080600083806020019051810190610f849190611813565b6000828152600860205260409020600681015493965091945092509060ff16610fbf5760405162461bcd60e51b815260040161042a90611754565b8060030154828260040154610fd49190611784565b111561101b5760405162461bcd60e51b815260206004820152601660248201527515185c99d95d08185b5bdd5b9d08195e18d95959195960521b604482015260640161042a565b428160050154116110645760405162461bcd60e51b8152602060048201526013602482015272111958591b1a5b99481a185cc81c185cdcd959606a1b604482015260640161042a565b818160040160008282546110789190611784565b90915550506040805163ffffffff891681526020810184905284916001600160a01b038716917f249073b88ce702b9abd1ff334f555a3261c9b36e51dc61b0924fabdb511a4a42910160405180910390a350505050505050565b6110da6111c0565b6110e4600061121a565b565b6110ee6111c0565b6001600160a01b0381166111535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042a565b61115c8161121a565b50565b80516000901561117157506019919050565b506000919050565b805160009015611171576000826000815181106111985761119861184a565b016020015160f81c905060646111af826019611860565b6111b9919061187f565b9392505050565b6000546001600160a01b031633146110e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461115c57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112be576112be61127f565b604052919050565b600067ffffffffffffffff8211156112e0576112e061127f565b50601f01601f191660200190565b60006113016112fc846112c6565b611295565b905082815283838301111561131557600080fd5b828260208301376000602084830101529392505050565b600082601f83011261133d57600080fd5b6111b9838335602085016112ee565b600080600080600060a0868803121561136457600080fd5b853561136f8161126a565b9450602086013567ffffffffffffffff8082111561138c57600080fd5b61139889838a0161132c565b955060408801359150808211156113ae57600080fd5b506113bb8882890161132c565b9598949750949560608101359550608001359392505050565b600080604083850312156113e757600080fd5b50508035926020909101359150565b60006020828403121561140857600080fd5b5035919050565b60005b8381101561142a578181015183820152602001611412565b83811115611439576000848401525b50505050565b6000815180845261145781602086016020860161140f565b601f01601f19169290920160200192915050565b6001600160a01b038816815260e06020820181905260009061148f9083018961143f565b82810360408401526114a1818961143f565b9150508560608301528460808301528360a083015282151560c083015298975050505050505050565b6000602082840312156114dc57600080fd5b81356111b98161126a565b6000806000606084860312156114fc57600080fd5b833563ffffffff8116811461151057600080fd5b925060208401359150604084013567ffffffffffffffff81111561153357600080fd5b8401601f8101861361154457600080fd5b611553868235602084016112ee565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000600182016115855761158561155d565b5060010190565b600181811c908216806115a057607f821691505b6020821081036115c057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561161057600081815260208120601f850160051c810160208610156115ed5750805b601f850160051c820191505b8181101561160c578281556001016115f9565b5050505b505050565b815167ffffffffffffffff81111561162f5761162f61127f565b6116438161163d845461158c565b846115c6565b602080601f83116001811461167857600084156116605750858301515b600019600386901b1c1916600185901b17855561160c565b600085815260208120601f198616915b828110156116a757888601518255948401946001909101908401611688565b50858210156116c55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080815260006116e8608083018761143f565b82810360208401526116fa818761143f565b604084019590955250506060015292915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561174457600080fd5b815180151581146111b957600080fd5b60208082526016908201527543616d706169676e206973206e6f742061637469766560501b604082015260600190565b600082198211156117975761179761155d565b500190565b6000602082840312156117ae57600080fd5b815167ffffffffffffffff8111156117c557600080fd5b8201601f810184136117d657600080fd5b80516117e46112fc826112c6565b8181528560208385010111156117f957600080fd5b61180a82602083016020860161140f565b95945050505050565b60008060006060848603121561182857600080fd5b83516118338161126a565b602085015160409095015190969495509392505050565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561187a5761187a61155d565b500290565b60008261189c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220453d73705ec48584e4c28a80769bfed0e6e9d55ee4da918348e5183d569d2db964736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806365a0aee2116100b85780638da5cb5b1161007c5780638da5cb5b146102da578063ab05b757146102eb578063b191f53214610312578063c550042114610339578063d2009a2714610379578063f2fde38b146103a057600080fd5b806365a0aee21461027c578063709d039d1461028f578063715018a6146102a257806372c0b64e146102aa5780637903a756146102d157600080fd5b80632e1a7d4d1161010a5780632e1a7d4d146101df57806330284efc146101f25780633e413bee146102225780634d17c7401461024d57806356d5d475146102605780635de556371461027357600080fd5b8063075843c3146101475780630cdd53f61461015c578063141961bc1461016f578063274481761461019e5780632dec1b4b146101cc575b600080fd5b61015a61015536600461134c565b6103b3565b005b61015a61016a3660046113d4565b610615565b61018261017d3660046113f6565b61086c565b604051610195979695949392919061146b565b60405180910390f35b6101be6101ac3660046114ca565b60066020526000908152604090205481565b604051908152602001610195565b61015a6101da3660046114ca565b6109c5565b61015a6101ed3660046113f6565b610cf6565b61015a6102003660046114ca565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600254610235906001600160a01b031681565b6040516001600160a01b039091168152602001610195565b61015a61025b3660046113f6565b600355565b61015a61026e3660046114e7565b610f05565b6101be60035481565b600154610235906001600160a01b031681565b600454610235906001600160a01b031681565b61015a6110d2565b6101be7f3e5f59afb28eefd9525b5a2a3e685a733e99fa16aeacdb37152ea65d9b1b423d81565b6101be60075481565b6000546001600160a01b0316610235565b6101be7f60ecd1bdb09484e1247f8c79f400cc78f8ff2b8bc010a2332aba54e28a3339c681565b6101be7f13b35f1f951b0047acda6ce2a2e67dfca07ec779483f93c4d74d92d60109f3a681565b6103696103473660046114ca565b6003546001600160a01b03909116600090815260066020526040902054101590565b6040519015158152602001610195565b6101be7fb54de7d710bb293db28cb644cd1b5e8ed893bb2d85468f8b0e5018b1c1864c8981565b61015a6103ae3660046114ca565b6110e6565b6003546001600160a01b03861660009081526006602052604090205410156104335760405162461bcd60e51b815260206004820152602860248201527f5468652063686172697479206f7267616e697a6174696f6e206973206e6f7420604482015267656c696769626c6560c01b60648201526084015b60405180910390fd5b4281116104825760405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e20746865206675747572650000604482015260640161042a565b600082116104e25760405162461bcd60e51b815260206004820152602760248201527f54617267657420616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b606482015260840161042a565b6007805490819060006104f483611573565b90915550506040805160e0810182526001600160a01b03888116825260208083018981528385018990526060840188905260006080850181905260a08501889052600160c08601819052878252600890935294909420835181546001600160a01b0319169316929092178255925191929091908201906105749082611615565b50604082015160028201906105899082611615565b50606082015160038201556080820151600482015560a0820151600582015560c0909101516006909101805460ff19169115159190911790556040516001600160a01b0387169082907f2ed5f13fbff3630ac8ec2d0779b5c1af5323ce6fa6e8810ce40317252f8733f2906106059089908990899089906116d5565b60405180910390a3505050505050565b6004546001600160a01b0316331461067f5760405162461bcd60e51b815260206004820152602760248201527f4f6e6c7920737761704d616e616765722063616e2063616c6c207468697320666044820152663ab731ba34b7b760c91b606482015260840161042a565b6002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906106b39033903090869060040161170e565b6020604051808303816000875af11580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f69190611732565b6107395760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b604482015260640161042a565b6000828152600860205260409020600681015460ff1661076b5760405162461bcd60e51b815260040161042a90611754565b80600301548282600401546107809190611784565b11156107c75760405162461bcd60e51b815260206004820152601660248201527515185c99d95d08185b5bdd5b9d08195e18d95959195960521b604482015260640161042a565b428160050154116108105760405162461bcd60e51b8152602060048201526013602482015272111958591b1a5b99481a185cc81c185cdcd959606a1b604482015260640161042a565b818160040160008282546108249190611784565b9091555050604080516089815260208101849052849132917f249073b88ce702b9abd1ff334f555a3261c9b36e51dc61b0924fabdb511a4a42910160405180910390a3505050565b600860205260009081526040902080546001820180546001600160a01b0390921692916108989061158c565b80601f01602080910402602001604051908101604052809291908181526020018280546108c49061158c565b80156109115780601f106108e657610100808354040283529160200191610911565b820191906000526020600020905b8154815290600101906020018083116108f457829003601f168201915b5050505050908060020180546109269061158c565b80601f01602080910402602001604051908101604052809291908181526020018280546109529061158c565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050506003830154600484015460058501546006909501549394919390925060ff1687565b6001546040516329b42cb560e01b815260009182916001600160a01b03909116906329b42cb590610a1e90339087907f60ecd1bdb09484e1247f8c79f400cc78f8ff2b8bc010a2332aba54e28a3339c69060040161170e565b600060405180830381865afa158015610a3b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a63919081019061179c565b9050610a6e8161115f565b610a789083611784565b6001546040516329b42cb560e01b81529193506000916001600160a01b03909116906329b42cb590610ad290339088907f13b35f1f951b0047acda6ce2a2e67dfca07ec779483f93c4d74d92d60109f3a69060040161170e565b600060405180830381865afa158015610aef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b17919081019061179c565b9050610b228161115f565b610b2c9084611784565b6001546040516329b42cb560e01b81529194506000916001600160a01b03909116906329b42cb590610b8690339089907f3e5f59afb28eefd9525b5a2a3e685a733e99fa16aeacdb37152ea65d9b1b423d9060040161170e565b600060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bcb919081019061179c565b9050610bd681611179565b610be09085611784565b6001546040516329b42cb560e01b81529195506000916001600160a01b03909116906329b42cb590610c3a9033908a907fb54de7d710bb293db28cb644cd1b5e8ed893bb2d85468f8b0e5018b1c1864c899060040161170e565b600060405180830381865afa158015610c57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c7f919081019061179c565b9050610c8a81611179565b610c949086611784565b6001600160a01b0387166000818152600660209081526040918290208490556003549151918410158083529398507f722947cf2ea50e4d2b4771633d4cb3ed1cd2a072d5d388a56f16cc28d49e3058910160405180910390a250505050505050565b6000818152600860205260409020600681015460ff16610d285760405162461bcd60e51b815260040161042a90611754565b80546001600160a01b03163314610d8d5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792074686520636861726974792063616e2077697468647261772066756044820152626e647360e81b606482015260840161042a565b806003015481600401541015610de55760405162461bcd60e51b815260206004820152601960248201527f54617267657420616d6f756e74206e6f74207265616368656400000000000000604482015260640161042a565b42816005015410610e385760405162461bcd60e51b815260206004820152601b60248201527f446561646c696e6520686173206e6f7420706173736564207965740000000000604482015260640161042a565b60068101805460ff19169055600254815460048084015460405163a9059cbb60e01b81526001600160a01b0393841692810192909252602482015291169063a9059cbb906044016020604051808303816000875af1158015610e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec29190611732565b50817f318daf69d77e946364e804495b2184222324b99fddeb42ab5fd25a919f596e8c8260040154604051610ef991815260200190565b60405180910390a25050565b6005546001600160a01b03163314610f6b5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206d61696c626f782063616e2063616c6c20746869732066756e637460448201526234b7b760e91b606482015260840161042a565b600080600083806020019051810190610f849190611813565b6000828152600860205260409020600681015493965091945092509060ff16610fbf5760405162461bcd60e51b815260040161042a90611754565b8060030154828260040154610fd49190611784565b111561101b5760405162461bcd60e51b815260206004820152601660248201527515185c99d95d08185b5bdd5b9d08195e18d95959195960521b604482015260640161042a565b428160050154116110645760405162461bcd60e51b8152602060048201526013602482015272111958591b1a5b99481a185cc81c185cdcd959606a1b604482015260640161042a565b818160040160008282546110789190611784565b90915550506040805163ffffffff891681526020810184905284916001600160a01b038716917f249073b88ce702b9abd1ff334f555a3261c9b36e51dc61b0924fabdb511a4a42910160405180910390a350505050505050565b6110da6111c0565b6110e4600061121a565b565b6110ee6111c0565b6001600160a01b0381166111535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042a565b61115c8161121a565b50565b80516000901561117157506019919050565b506000919050565b805160009015611171576000826000815181106111985761119861184a565b016020015160f81c905060646111af826019611860565b6111b9919061187f565b9392505050565b6000546001600160a01b031633146110e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461115c57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156112be576112be61127f565b604052919050565b600067ffffffffffffffff8211156112e0576112e061127f565b50601f01601f191660200190565b60006113016112fc846112c6565b611295565b905082815283838301111561131557600080fd5b828260208301376000602084830101529392505050565b600082601f83011261133d57600080fd5b6111b9838335602085016112ee565b600080600080600060a0868803121561136457600080fd5b853561136f8161126a565b9450602086013567ffffffffffffffff8082111561138c57600080fd5b61139889838a0161132c565b955060408801359150808211156113ae57600080fd5b506113bb8882890161132c565b9598949750949560608101359550608001359392505050565b600080604083850312156113e757600080fd5b50508035926020909101359150565b60006020828403121561140857600080fd5b5035919050565b60005b8381101561142a578181015183820152602001611412565b83811115611439576000848401525b50505050565b6000815180845261145781602086016020860161140f565b601f01601f19169290920160200192915050565b6001600160a01b038816815260e06020820181905260009061148f9083018961143f565b82810360408401526114a1818961143f565b9150508560608301528460808301528360a083015282151560c083015298975050505050505050565b6000602082840312156114dc57600080fd5b81356111b98161126a565b6000806000606084860312156114fc57600080fd5b833563ffffffff8116811461151057600080fd5b925060208401359150604084013567ffffffffffffffff81111561153357600080fd5b8401601f8101861361154457600080fd5b611553868235602084016112ee565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000600182016115855761158561155d565b5060010190565b600181811c908216806115a057607f821691505b6020821081036115c057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561161057600081815260208120601f850160051c810160208610156115ed5750805b601f850160051c820191505b8181101561160c578281556001016115f9565b5050505b505050565b815167ffffffffffffffff81111561162f5761162f61127f565b6116438161163d845461158c565b846115c6565b602080601f83116001811461167857600084156116605750858301515b600019600386901b1c1916600185901b17855561160c565b600085815260208120601f198616915b828110156116a757888601518255948401946001909101908401611688565b50858210156116c55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080815260006116e8608083018761143f565b82810360208401526116fa818761143f565b604084019590955250506060015292915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561174457600080fd5b815180151581146111b957600080fd5b60208082526016908201527543616d706169676e206973206e6f742061637469766560501b604082015260600190565b600082198211156117975761179761155d565b500190565b6000602082840312156117ae57600080fd5b815167ffffffffffffffff8111156117c557600080fd5b8201601f810184136117d657600080fd5b80516117e46112fc826112c6565b8181528560208385010111156117f957600080fd5b61180a82602083016020860161140f565b95945050505050565b60008060006060848603121561182857600080fd5b83516118338161126a565b602085015160409095015190969495509392505050565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561187a5761187a61155d565b500290565b60008261189c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220453d73705ec48584e4c28a80769bfed0e6e9d55ee4da918348e5183d569d2db964736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 86,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 302,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "attestationStation",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IAttestationStation)968"
      },
      {
        "astId": 305,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "usdc",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)269"
      },
      {
        "astId": 307,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "minimumAttestationScore",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 309,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "swapManager",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 315,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "mailbox",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IMailbox)78"
      },
      {
        "astId": 339,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "charityScores",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 357,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "nextCampaignId",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 362,
        "contract": "contracts/Multinate.sol:Multinate",
        "label": "campaigns",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_struct(Campaign)354_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAttestationStation)968": {
        "encoding": "inplace",
        "label": "contract IAttestationStation",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)269": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IMailbox)78": {
        "encoding": "inplace",
        "label": "contract IMailbox",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Campaign)354_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Multinate.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)354_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)354_storage": {
        "encoding": "inplace",
        "label": "struct Multinate.Campaign",
        "members": [
          {
            "astId": 341,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "charity",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 343,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 345,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 347,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "targetAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 349,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "currentAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 351,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "deadline",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 353,
            "contract": "contracts/Multinate.sol:Multinate",
            "label": "active",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}